<?php
final class GWF_HTAccess
{
	################
	### HTACCESS ###
	################
	public static function getHTAccess()
	{
		return
			'#############################'.PHP_EOL.
			'### Generated by GWFv3.00 ###'.PHP_EOL.
			'#############################'.PHP_EOL.
			'### NICE LIMITS ###'.PHP_EOL.
			'###################'.PHP_EOL. 
//			'IndexIgnore .htaccess */.??* *~ *# */HEADER* */README* */_vti*'.PHP_EOL.
//			'<Limit GET POST>'.PHP_EOL.
//			'order deny,allow'.PHP_EOL.
//			'deny from all'.PHP_EOL.
//			'allow from all'.PHP_EOL.
//			'</Limit>'.PHP_EOL.
			'<Limit PUT DELETE CONNECT>'.PHP_EOL.
			'order deny,allow'.PHP_EOL.
			'deny from all'.PHP_EOL.
			'</Limit>'.PHP_EOL.PHP_EOL.
			'# Custom error pages'.PHP_EOL.
			'ErrorDocument 403 '.GWF_WEB_ROOT.'index.php?mo=GWF&me=Error&code=403'.PHP_EOL.
			'ErrorDocument 404 '.GWF_WEB_ROOT.'index.php?mo=GWF&me=Error&code=404'.PHP_EOL.PHP_EOL.
			'RewriteEngine On'.PHP_EOL.PHP_EOL.
			self::getLangRewrites().PHP_EOL.PHP_EOL;
	}
	
	private static function getLangRewrites()
	{
		$back = '';
		$back .= '############'.PHP_EOL;
		$back .= '### /de/ ###'.PHP_EOL;
		$back .= '############'.PHP_EOL;
		foreach (preg_split('/[;,]+/', GWF_SUPPORTED_LANGS) as $iso)
		{
			if (false !== GWF_Language::getByISO($iso))
			{
				$back .= sprintf('RewriteRule ^%s/(.*) /$1', $iso).PHP_EOL;
			}
		}
		return $back;
	}
	
	###############
	### Protect ###
	###############
	public static function protect($dir)
	{
		$dir = dirname($dir);
		$path = $dir.'/.htaccess';
		if (Common::isFile($path)) {
			return true;
		}
		
		if (!is_dir($dir)) {
			GWF_Log::logCritical(sprintf('Supported arg is not a dir in %s.', __METHOD__));
			return false;
		}
		
		if (!is_writable($dir)) {
			GWF_Log::logCritical(sprintf('Cannot write to directory %s in %s.', $dir, __METHOD__));
			return false;
		}
		
		$data =
//			'<Limit GET POST PUT DELETE CONNECT>'.PHP_EOL.
			'order deny,allow'.PHP_EOL.
			'deny from all'.PHP_EOL;
//			'</Limit>'.PHP_EOL;
		if (false === file_put_contents($path, $data)) {
			GWF_Log::logCritical(sprintf('Cannot write to file %s in %s.', $path, __METHOD__));
			return false;
		}
		
		return true;
	}
}
?>